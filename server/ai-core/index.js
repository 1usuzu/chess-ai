const { Chess } = require("chess.js");
const { findBestMove } = require("./ai");
const prompt = require("prompt-sync")();

// --- Ch·ªçn m√†u qu√¢n c·ªù ---
let playerColor = prompt("B·∫°n mu·ªën ch∆°i qu√¢n n√†o? (w = Tr·∫Øng, b = ƒêen): ").trim().toLowerCase();
while (playerColor !== 'w' && playerColor !== 'b') {
    playerColor = prompt("Vui l√≤ng nh·∫≠p l·∫°i (w ho·∫∑c b): ").trim().toLowerCase();
}
const aiColor = playerColor === 'w' ? 'b' : 'w';

const game = new Chess();

// --- In b√†n c·ªù ---
function printBoard() {
    console.log("\nB√†n c·ªù hi·ªán t·∫°i:");
    console.log(game.ascii());
    console.log("L∆∞·ª£t ƒëi hi·ªán t·∫°i:", game.turn() === 'w' ? "Tr·∫Øng" : "ƒêen");
}

// --- Ki·ªÉm tra k·∫øt th√∫c ---
function checkGameOver() {
    if (game.isGameOver()) {
        if (game.isCheckmate()) {
            console.log("Chi·∫øu h·∫øt!");
        } else if (game.isDraw()) {
            console.log("V√°n ƒë·∫•u h√≤a!");
        } else {
            console.log("V√°n ƒë·∫•u k·∫øt th√∫c!");
        }
        printBoard();
        process.exit(0);
    }
}

// --- AI ƒëi n∆∞·ªõc ƒë·∫ßu n·∫øu l√† tr·∫Øng ---
function aiPlaysFirstMove() {
    console.log("AI (Tr·∫Øng) ƒëi tr∆∞·ªõc...");

    const result = findBestMove(game.fen(), {
        maxDepth: 4,
        timeLimit: 2000,
        aiColor: 'w',
        returnScores: true
    });

    let moveObj = result.bestMove;
    if (typeof moveObj === 'string') {
        moveObj = { from: moveObj.slice(0, 2), to: moveObj.slice(2, 4) };
    }

    const move = game.move(moveObj, { sloppy: true });
    if (!move) {
        // console.log("AI kh√¥ng th·ªÉ ƒëi n∆∞·ªõc ƒë·∫ßu ti√™n!");
        process.exit(1);
    }

    // console.log("\nƒêi·ªÉm ƒë√°nh gi√° c√°c n∆∞·ªõc ƒëi ƒë·∫ßu c·ªßa AI:");
    result.scores.forEach(({ move, score }) => {
        console.log(`- ${move}: ${score}`);
    });

    console.log(`\nü§ñ AI (Tr·∫Øng) ƒëi: ${move.from} ‚Üí ${move.to}`);
    printBoard();
    checkGameOver();
}

// --- In b√†n c·ªù l·∫ßn ƒë·∫ßu
printBoard();

// N·∫øu AI l√† tr·∫Øng ‚Üí cho AI ƒëi tr∆∞·ªõc
if (aiColor === 'w') {
    aiPlaysFirstMove();
}

// --- V√íNG L·∫∂P TR√í CH∆†I ---
while (true) {
    if (game.turn() === playerColor) {
        const moveInput = prompt("Nh·∫≠p n∆∞·ªõc ƒëi c·ªßa b·∫°n (v√≠ d·ª•: e2e4): ").trim();
        const move = game.move(moveInput, { sloppy: true });

        if (!move) {
            console.log("N∆∞·ªõc ƒëi kh√¥ng h·ª£p l·ªá, th·ª≠ l·∫°i.");
            continue;
        }

        console.log(`\nüë§ B·∫°n (${playerColor === 'w' ? 'Tr·∫Øng' : 'ƒêen'}) ƒëi: ${move.from} ‚Üí ${move.to}`);
        printBoard();
        checkGameOver();
    } else {
        // console.log("\nAI ƒëang suy nghƒ©...");

        const result = findBestMove(game.fen(), {
            maxDepth: 4,
            timeLimit: 2000,
            aiColor: aiColor,
            returnScores: true
        });

        // console.log("\nƒêi·ªÉm ƒë√°nh gi√° c√°c n∆∞·ªõc ƒëi c·ªßa AI:");
        result.scores.forEach(({ move, score }) => {
            console.log(`- ${move}: ${score}`);
        });

        let moveObj = result.bestMove;
        if (typeof moveObj === 'string') {
            moveObj = { from: moveObj.slice(0, 2), to: moveObj.slice(2, 4) };
        }

        const move = game.move(moveObj, { sloppy: true });
        if (!move) {
            // console.log("AI kh√¥ng t√¨m ƒë∆∞·ª£c n∆∞·ªõc ƒëi h·ª£p l·ªá!");
            process.exit(1);
        }

        console.log(`\nAI (${aiColor === 'w' ? 'Tr·∫Øng' : 'ƒêen'}) ƒëi: ${move.from} ‚Üí ${move.to}`);
        printBoard();
        checkGameOver();
    }
}
